class Solution {
public:
    bool dfs(int start,int destination,vector<vector<int>>& adj,vector<bool>&visit)
    {
        visit[start]=true;
        if(start==destination)
        {
            return true;
        }
        for(int a:adj[start])
        {
            if(!visit[a])
            {
                if(dfs(a,destination,adj,visit)) return true;
            }
        }
        return false;
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<vector<int>>adj(n);
        for(int i=0;i<edges.size();i++)
        {
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
        }
        vector<bool>visit(n);
        return dfs(source,destination,adj,visit);
    }
};
