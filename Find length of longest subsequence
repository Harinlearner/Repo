int find(int i,int j,string &s1,string &s2,vector<vector<int>>&dp)
{
    if(i==0 || j==0)
    {
        return 0;
    }
    if(dp[i][j]!=-1)
    {
        return dp[i][j];
    }
    if(s1[i-1]==s2[j-1])
    {
        return dp[i][j]=1+find(i-1,j-1,s1,s2,dp);
    }
    return dp[i][j]=find(i-1,j,s1,s2,dp);
}
int maxSubsequenceSubstring(string X, string Y, int N, int M) {
    int res=INT_MIN;
    vector<vector<int>>dp(N+1,vector<int>(M+1,-1));
    for(int i=0;i<=M;i++)
    {
        res=max(res,find(N,i,X,Y,dp));   
    }
    return res;
}
