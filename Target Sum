int findTargetSumWays(vector<int>& nums, int target) {
        int tot=0;
       for(int i=0;i<nums.size();i++)
       {
            tot+=nums[i];
       }
       if((tot+target)%2==1)
       {
            return 0;
       }
        int ref=(tot+target)/2;
        if(ref<0)
        {
            return 0;
        }
        vector<vector<int>>dp(nums.size(),vector<int>(ref+1,0));
        if(nums[0]==0) // two possiblity of take or not take
        dp[0][0]=2;
        else
        dp[0][0]=1; // one not by selecting

        if(nums[0]!=0 && nums[0]<=ref)
        {
            dp[0][nums[0]]=1;
        } 
        for(int i=1;i<nums.size();i++)
        {
            for(int j=0;j<=ref;j++)
            {
                    int a=0,b=0;
                    if(j>=nums[i])
                    {
                        a=dp[i-1][j-nums[i]];
                    }
                    b=dp[i-1][j];
                    dp[i][j]=a+b;
            }
        }
        return dp[nums.size()-1][ref];
    }
