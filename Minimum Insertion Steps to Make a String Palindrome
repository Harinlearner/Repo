class Solution {
public:
    int LCS(int i,int j,string &s1,string &s2,vector<vector<int>>&dp)
    {
        if(i<0 || j<0)
        {
            return 0;
        }
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        if(s1[i]==s2[j])
        {
            return dp[i][j]=1+LCS(i-1,j-1,s1,s2,dp);
        }
        return dp[i][j]=max(LCS(i-1,j,s1,s2,dp),LCS(i,j-1,s1,s2,dp));
    }
    int minInsertions(string s) {
        string s1,s2;
        s1=s;
        int n=s.length();
        vector<vector<int>>dp(n,vector<int>(n,-1));
        reverse(s.begin(),s.end());
        s2=s;
        return s.length()-LCS(n-1,n-1,s1,s2,dp);
    }
};
