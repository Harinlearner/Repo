// Youtube link => https://youtu.be/fxwvVnBMN6I?si=tMK3ltY9csJYCdm8

class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.size();string res="";
        int maxi=INT_MIN;
        vector<vector<int>>dp(s.length(),vector<int>(s.length(),0));
        for(int diff=0;diff<n;diff++)
        {
            for(int i=0,j=diff;j<n;j++,i++)
            {
                if(i==j)
                {
                    dp[i][j]=1;
                }
                else if(diff==1)
                {
                    dp[i][j]=(s[i]==s[j])?2:0;
                }
                else
                {
                    if(dp[i+1][j-1]>0 && s[i]==s[j])
                    {
                        dp[i][j]=dp[i+1][j-1]+2;
                    }
                }
                if(dp[i][j]>0)
                {
                    if(j-i+1>maxi)
                    {
                        maxi=j-i+1;
                        res=s.substr(i,j-i+1);
                    }
                }
            }
        }
            return res;
    }
};
