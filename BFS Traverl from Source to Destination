class Solution {
public:
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        queue<int>q;
        q.push(0);
        unordered_map<int,int>parent;
        parent[0]=-1;
        while(!q.empty()){
            int node=q.front();
            q.pop();
            for(int a:graph[node])
            {
                parent[a]=node;
                q.push(a);
            }
        }
        int n=graph.size();
        vector<int>path;
        for(int node=n-1;node!=-1;node=parent[node])
        {
            path.push_back(node);
        }
        for(int i=0;i<path.size();i++)
        {
            cout<<path[i]<<" ";
        }
        return graph;
    }
};
