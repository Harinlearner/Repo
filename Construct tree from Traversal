TreeNode *constructor(int preStart,int preEnd,int inStart,int inEnd,vector<int>& preOrder, vector<int>& inOrder, map<int,int>&mp)
    {
        if(preStart>preEnd || inStart>inEnd)
        {
            return NULL;
        }
        TreeNode *newnode=new TreeNode(preOrder[preStart]);
        int inIndex=mp[newnode->val];
        int size=inIndex-inStart;
        newnode->left=constructor(preStart+1,preStart+size,inStart,inIndex-1,preOrder,inOrder,mp);
        newnode->right=constructor(preStart+size+1,preEnd,inIndex+1,inEnd,preOrder,inOrder,mp);

        return newnode;
    }
    TreeNode* buildTree(vector<int>& preOrder, vector<int>& inOrder) {
        map<int,int>mp;
        int n=inOrder.size();
        for(int i=0;i<n;i++)
        {
            mp[inOrder[i]]=i;
        }
        return constructor(0,n-1,0,n-1,preOrder,inOrder,mp);
    }
